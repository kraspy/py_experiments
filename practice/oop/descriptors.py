from datetime import datetime as dt


class PasswordField:
    def __get__(self, instance, owner):
        print(f'üì§ PasswordField [__get__]: {instance=}, {owner=}')
        return '*****'

    def __set__(self, instance, value):
        if not isinstance(value, str) or len(value) < 8:
            raise ValueError('‚ùå –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –º–∏–Ω–∏–º—É–º –∏–∑ 8 —Å–∏–º–≤–æ–ª–æ–≤')

        print(f'üì• PsswordField [__set__]: {instance=}, {value=}')
        instance._password = hash(value)

    def __delete__(self, instance):
        pass
        # print(f'PsswordField [__sel__]: {instance=}, {owner=}')
        # ...


class EmailField:
    def __get__(self, instance, owner):
        print(f'üì§ EmailField [__get__]: {instance=}, {owner=}')
        return instance._email

    def __set__(self, instance, value):
        if (
            not isinstance(value, str)
            or '@' not in value
            or '.' not in value.split('@')[-1]
        ):
            raise ValueError('‚ùå –ê–¥—Ä–µ—Å email –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª "@"')

        print(f'üì• EmailField [__set__]: {instance=}, {value=}')
        instance._email = value.lower()


class MetadataField:
    def __init__(self) -> None:
        self.counter = 0
        self.created_at = dt.utcnow()

    def __get__(self, instance, owner):
        print(f'üì§ MetadataField [__get__]: {instance=}, {owner=}')

        if instance is None:
            return self

        self.counter += 1

        return {
            'created_at': self.created_at,
            'requests': self.counter,
        }


class UserAccount:
    password = PasswordField()
    email = EmailField()
    metadata = MetadataField()


acc = UserAccount()

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π
acc.email = 'User@mail.ru'
acc.password = '12345678'

print('\n=== –ß—Ç–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π ===')
print(f'{acc.email=}')
print(f'{acc.password=}')
print(f'{acc.metadata=}')
for i in range(10_000):
    i**i
print(f'{acc.metadata=}')

print('\n=== –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ===')
acc.email = 'admin@mail.ru'
acc.__dict__['email'] = 'EMAIL'

print(acc.email)
